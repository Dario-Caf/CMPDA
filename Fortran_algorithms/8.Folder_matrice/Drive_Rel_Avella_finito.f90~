Program drive_relazione
  !Per cambiare le dim di A basta cambiare n e il formato di stampa per ogni print
  
  Use LibraryMatr

  Implicit None
  integer(4), parameter:: n=6
  integer(4):: i
  Type(matrix) :: Data
  Type(matrix_para) :: para
  Real(rk) :: lambda(1:n),uni(1:n,1:n),uni6(1:n,1:n),A(1:n,1:n)
  Character(Len=1) :: n_l

  Write(n_l,'(I1)') n

  para%eps_x=1.E-6_rk
  para%eps_lambda=1.E-6_rk
  para%max_steps=100

  A=Reshape([2,0,0,0,0,0,0,1,0,0,0,0,0,0,3,0,0,0,0,0,0,4,0,0,0,0,0,0,5,0,0,0,0,0,0,6],[6,6])
  uni=0
  Forall(i=1:n) uni(i,i)=1
  Uni6=Reshape([1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1],[6,6])
  Allocate(data%A(1:n,1:n))
  data%A=A
  
  Print *,''
  Print *,'            A'
  Do i=1,n
     Print '('//n_l//'(x,E13.6))',data%A(i,:)
  End do
  Print *,'-----------------------------------'
  Print *,'-----------------------------------'
  Print *,''

  Print '(x,A,I1)','stat det = ',det(Data)
  Print '(x,A,x,E13.6)','det A= ',data%detA
  Print *,'-----------------------------------'
  Print *,'-----------------------------------'
  Print *,''

  Print '(x,A,I1)','stat inv = ',inv(Data)
  Print *,'             inv A'
  Do i=1,n
     Print '('//n_l//'(x,E13.6))',data%iA(i,:)
  End do
  Print *,''
  Print *,'check A * inv A = I'
  Do i=1,n
     Print '('//n_l//'(x,E13.6))',Matmul(data%A(i,:),data%iA)
  End do
  Print *,'-----------------------------------'
  Print *,'-----------------------------------'
  Print *, ''

  Print *, 'Inizio ricerca di autovalori e autovettori:'                                 !hfhffhhfhf

  Print *,'Primo autovalore (maggiore)'
  Print '(x,A,I1)','stat eigen = ',eigen(Data,para)
  lambda(1)=data%lambda
  Print '(x,A,'//n_l//'(x,E13.6),x,A,(x,E13.6))','x_1= (', data%x, ') lambda_1=', lambda(1)
  Print '(x,A,x,I4)','steps_1= ',para%steps
  Print *,''

  Print *, 'Secondo autovalore (minore)'
  data%A=data%iA
  Print '(x,A,I1)','stat eigen = ',eigen(Data,para)
  lambda(2)=1._rk/data%lambda
  Print '(x,A,'//n_l//'(x,E13.6),x,A,(x,E13.6))','x_2= (', data%x, ') lambda_2=', lambda(2)
  Print '(x,A,x,I4)','steps_2= ',para%steps
  Print *,''
  
  Print *, 'Terzo autovalore (cerchi)'
  Print *, 'Quarto autovalore (cerchi)'

  Print *, 'Quinto e sesto autovalore (traccia e determinante)'
  Data%TrA=0._rk
  Do i=1,n
     Data%TrA=Data%TrA + A(i,i)  
  End do

  Allocate (data%b(1:n))
  data%b=0._rk
  !Quinto autovettore
  data%A=A-lambda(5)*Uni6
  if(linsys(data)/=0) Stop 'Errore nel calcolo del 5° autovettore'
  Print '(x,A,'//n_l//'(x,E13.6),x,A,(x,E13.6))','x_5= (', data%x/sqrt(dot_product(data%x,data%x)), ') lambda_5=', lambda(5)
  Print *,''
  !Sesto autovettore
  data%A=A-lambda(6)*Uni6
  if(linsys(data)/=0) Stop 'Errore nel calcolo del 6° autovettore'
  Print '(x,A,'//n_l//'(x,E13.6),x,A,(x,E13.6))','x_6= (', data%x/sqrt(dot_product(data%x,data%x)), ') lambda_6=', lambda(6)
  Print *,''
  
  

End Program drive_relazione
